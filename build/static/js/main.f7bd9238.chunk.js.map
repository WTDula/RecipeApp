{"version":3,"sources":["components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","recipe","match","className","src","alt","require","config","App","useState","query","setQuery","recipes","setRecipes","RECIPE_API","a","Axios","get","result","data","hits","console","log","onSubmit","e","preventDefault","getRecipes","type","placeholder","value","onChange","target","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAeeA,EAbA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OAEO,MADHA,EAAM,OAAN,MAA0BC,MAAM,0BAE5B,sBAAKC,UAAU,SAAf,UACI,qBAAKA,UAAU,aAAaC,IAAKH,EAAM,OAAN,MAA2BI,IAAI,KAChE,mBAAGF,UAAU,cAAb,SAA4BF,EAAM,OAAN,YCL5CK,EAAQ,IAAUC,SAiDHC,MA5Cf,WACE,MAA2BC,mBAAS,IAApC,mBAAQC,EAAR,KAAeC,EAAf,KACA,EAAgCF,mBAAS,IAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KAGMC,EAAU,0CAAsCJ,EAAtC,oCADI,mCACJ,wBALH,4CAOb,4BAAAK,EAAA,sEACqBC,IAAMC,IAAIH,GAD/B,OACMI,EADN,OAEEL,EAAWK,EAAOC,KAAKC,MACvBC,QAAQC,IAAIJ,EAAOC,MAHrB,4CAPa,sBAkBb,OACE,sBAAKhB,UAAU,mBAAf,UACM,8CACA,uBAAMA,UAAU,cAAcoB,SARrB,SAACC,GAChBA,EAAEC,iBAdS,mCAeXC,IAMM,UACE,uBACAC,KAAK,OACLxB,UAAU,eACVyB,YAAY,oBACZC,MAAOnB,EACPoB,SAAU,SAACN,GAAD,OAAOb,EAASa,EAAEO,OAAOF,UAEnC,uBACE1B,UAAU,aACVwB,KAAK,SACLE,MAAM,cAGV,qBAAK1B,UAAU,eAAf,SACGS,EAAQoB,KAAI,SAAC/B,GACZ,OAAO,cAAC,EAAD,CAAQA,OAAQA,aCjCtBgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7bd9238.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Recipe = ({recipe}) => {\r\n    return  (\r\n        recipe[\"recipe\"][\"image\"].match(/\\.(jpeg|jpg|gif|png)$/) //if the images in the recipe are not jpeg, jpg, gif, or png they wont be displayed\r\n        != null && (\r\n            <div className=\"recipe\">\r\n                <img className=\"recipe-img\" src={recipe[\"recipe\"][\"image\"]} alt=\"\"/>\r\n                <p className=\"recipe-name\">{recipe[\"recipe\"][\"label\"]}</p>\r\n            </div>\r\n        )\r\n    );    \r\n}\r\n\r\n\r\nexport default Recipe;","import React, { useState } from 'react';\nimport Axios from 'axios';\nimport Recipe from './components/Recipe';\nrequire('dotenv').config();\n\n\n\n\nfunction App() {\n  const [ query, setQuery] = useState('');\n  const [ recipes, setRecipes ] = useState([]);\n\n  const YOUR_APP_KEY= 'e783fec19e5c17d3a6de053f82954827';//tried using process.env to get this, but doesnt work\n  const RECIPE_API = `https://api.edamam.com/search?q=${query}&app_id=2ac6576e&app_key=${YOUR_APP_KEY}&health=alcohol-free`;\n  \n  async function getRecipes(){\n    var result = await Axios.get(RECIPE_API);\n    setRecipes(result.data.hits);\n    console.log(result.data);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getRecipes();\n  }\n  \n  return (\n    <div className=\"recipe-container\">\n          <h1>Food Recipes</h1>\n          <form className=\"search-form\" onSubmit={onSubmit}>\n            <input \n            type=\"text\"\n            className=\"search-input\"\n            placeholder=\"Search Ingredient\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}  \n            />\n            <input \n              className=\"submit-btn\" \n              type=\"submit\" \n              value=\"Search\" />\n            \n          </form>\n          <div className=\"recipes-grid\">\n            {recipes.map((recipe) => {\n              return <Recipe recipe={recipe}/>;\n            })}\n          </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}